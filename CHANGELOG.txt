
v2.3:
 -Many vector overloads has been added
 -The DPStokes module has been added
 -The DPPoisson module now accepts an infinite permitivitty, which is understood as a metallic wall.
 -The ICM_Compressible has been added.
 
API Breaking changes:
    -The WeightCompute advancer parameter to IBM now takes a thrust::tuple<T,T,T> as the second argument. This allows to generalize IBM to any return type for the phi functions. With this things like (rx^2 + ry^2)*phi(rx)*phi(ry) can be spreaded/interpolated



v2.0:
Version shipped with Raul's Ph.D manuscript
API Breaking Changes:
  -Add Computables to the Interactor interface, replacing the old sumForce/Energy family of function with just sum(Computables ...)
  -Remove System as an input argument to every Interactor/Integrator. Now modules fetch it from the ParticleData instance.
  -In Integrators/Interactors where it makes sense to pass a ParticleGroup, a ParticleData is not needed (modules will request ParticleGroup from the ParticleData).
  -The Potential interface has been simplified, a single getTransverser function now exists, with an argument of type Computables that covers the requirements of the caller.
       -The requirements of the Transverser in a Potential have also changed slightly.
  -The interface for the Bonded Interactors have been unified.
  -The ExternalForces module has also been ported to only have a single "sum" function, which takes a Computables as an argument.
  -The IBM module has been updated to allow more generic forms of the coupling kernels.
  
Most of these changes are present in the generic_md example (look inside customizations.cuh).  

In addition to the above, some new modules and utility functions have been included.


v1.x:
First version of the different interfaces
